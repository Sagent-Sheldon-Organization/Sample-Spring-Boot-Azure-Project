# Maven
# Build your Java project and run tests with Apache Maven.
# Deploy
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- main

variables:
   - name: process.clean
     value: false

pool: Self-Hosted-ubuntu-Agent

stages:
- stage: Build
  displayName: Build stage
  jobs:  
  - job: Build
    displayName: Build Maven Project
    steps:
    - task: Maven@3
      #env:
      #  JAVA_HOME: /Library/Java/JavaVirtualMachines/adoptopenjdk-8.jdk/Contents/Home
      displayName: 'Maven Package'
      inputs:
        mavenPomFile: 'pom.xml'
        goals: 'package'
    - task: CopyFiles@2
      displayName: 'Copy Files to artifact staging directory'
      inputs:
        SourceFolder: '$(System.DefaultWorkingDirectory)'
        Contents: '**/target/*.?(war|jar)'
        TargetFolder: $(Build.ArtifactStagingDirectory)
    - task: PublishBuildArtifacts@1
      inputs:
        pathToPublish: $(Build.ArtifactStagingDirectory)
        artifactName: SampleSpringBootBuild
     - script: |
         pip install -r port_requirements.txt
     - task: PythonScript@0
       env:
         PORT_CLIENT_ID: $(PORT_CLIENT_ID)
         PORT_CLIENT_SECRET: $(PORT_CLIENT_SECRET)
         QUEUED_BY: $(Build.QueuedBy)
         GIT_SHA: $(Build.SourceVersion)
         JOB_NAME: $(Build.DefinitionName)
         JOB_URL: "$(System.TeamFoundationCollectionUri)$(System.TeamProject)/_build/results?buildId=$(Build.BuildId)"
       inputs:
         scriptSource: "filePath"
         scriptPath: "main.py"
